/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2024-10-10 04:45:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.AdminJSP;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.Data;
import java.util.*;

public final class AllPlayerList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/AdminJSP/Head.jsp", Long.valueOf(1727838462065L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Data");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/Main.css\">\n");
      out.write("<script src=\"js/main.js\"></script>\n");
      out.write("<title>タイトル予定</title>\n");
      out.write("</head>\n");
      out.write("</html>");
      out.write('\n');
      out.write('\n');

	List<Data> list = (List<Data>)request.getAttribute("dataList");
	String[] status  = {"STR","CON","DEX","AGI","INT","SEC","MET","LUC"};

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<body>\n");
      out.write("	<div class=\"big1\">\n");
      out.write("		<input id=\"requestId\" type=\"number\" max=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dataList.size()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" min=\"1\" placeholder=\"数字を入れてね\">\n");
      out.write("		<button id=\"button\">検索</button>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"big2\">\n");
      out.write("		<table id=\"pickup\"></table>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"big4\">\n");
      out.write("	<table id=\"insertData\">\n");
      out.write("	<form action=\"\" method=\"post\">\n");
      out.write("		<tr class=\"top\">\n");
      out.write("			<th>id</th>\n");
      out.write("			<th>Name</th>\n");
      out.write("    		<th>Pass</th>\n");
      out.write("    	</tr>\n");
      out.write("    	<tr>\n");
      out.write("    		<td><input type=\"number\" min=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dataList.size()+1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"数字入れてね\" name=\"id\" id=\"minimam\"></td>\n");
      out.write("			<td><input type=\"text\" min=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dataList.size()+1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"name\"></td>\n");
      out.write("			<td><input type=\"text\" min=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dataList.size()+1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"pass\"></td>\n");
      out.write("    	</tr>\n");
      out.write("    	</table>\n");
      out.write("    	<table id=\"insertData\">\n");
      out.write("    	<tr>\n");
      out.write("    		<th>Strength</th>\n");
      out.write("    		<th>Constitution</th>\n");
      out.write("    		<th>Dexterity</th>\n");
      out.write("    		<th>Agility</th>\n");
      out.write("    		<th>Intelligence</th>\n");
      out.write("    		<th>Sensing</th>\n");
      out.write("    		<th>Mentality</th>\n");
      out.write("    		<th>Luck</th>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			");
for(int i = 0 ; i < 8 ; i++ ){ 
      out.write("\n");
      out.write("				<td><input type=\"number\" min=\"1\" placeholder=\"");
      out.print(status[i]);
      out.write("\" name=\"");
      out.print(status[i]);
      out.write("\"></td>\n");
      out.write("			");
} 
      out.write("\n");
      out.write("		</tr>\n");
      out.write("		</table>\n");
      out.write("		<button type=\"submit\" class=\"insert\">登録</button>\n");
      out.write("	</form>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"hide\">\n");
      out.write("		<div class=\"box\">\n");
      out.write("			<p>test</p>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"big3\">\n");
      out.write("	<table id=\"allList\">\n");
      out.write("		<tr class=\"top\">\n");
      out.write("			<th>id</th>\n");
      out.write("			<th>Name</th>\n");
      out.write("        	<th>Pass</th>\n");
      out.write("       		<th>Strength</th>\n");
      out.write("        	<th>Constitution</th>\n");
      out.write("        	<th>Dexterity</th>\n");
      out.write("        	<th>Agility</th>\n");
      out.write("        	<th>Intelligence</th>\n");
      out.write("        	<th>Sensing</th>\n");
      out.write("        	<th>Mentality</th>\n");
      out.write("        	<th>Luck</th>\n");
      out.write("		</tr>\n");
      out.write("		");
 for(int i = 0; i < list.size(); i++) { 
      out.write("\n");
      out.write("			<tr class=\"childrendata\">\n");
      out.write("				<td class=\"target1\">");
      out.print(list.get(i).getId() );
      out.write("</td>\n");
      out.write("				<td class=\"target2\">");
      out.print(list.get(i).getName() );
      out.write("</td>\n");
      out.write("        		<td class=\"target3\">");
      out.print(list.get(i).getPass() );
      out.write("</td>\n");
      out.write("       			<td class=\"target4\">");
      out.print(list.get(i).getSTR() );
      out.write("</td>\n");
      out.write("        		<td class=\"target5\">");
      out.print(list.get(i).getCON() );
      out.write("</td>\n");
      out.write("        		<td class=\"target6\">");
      out.print(list.get(i).getDEX() );
      out.write("</td>\n");
      out.write("        		<td class=\"target7\">");
      out.print(list.get(i).getAGI() );
      out.write("</td>\n");
      out.write("        		<td class=\"target8\">");
      out.print(list.get(i).getINT() );
      out.write("</td>\n");
      out.write("        		<td class=\"target9\">");
      out.print(list.get(i).getSEC() );
      out.write("</td>\n");
      out.write("        		<td class=\"target10\">");
      out.print(list.get(i).getMET() );
      out.write("</td>\n");
      out.write("        		<td class=\"target11\">");
      out.print(list.get(i).getLUC() );
      out.write("</td>\n");
      out.write("        	</tr>\n");
      out.write("		");
 } 
      out.write("\n");
      out.write("	</table>\n");
      out.write("	</div>\n");
      out.write("	<script src=\"js/main.js></script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
